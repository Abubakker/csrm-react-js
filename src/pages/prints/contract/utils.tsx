import dayjs from 'dayjs';
import { OmsRecycleOrderContractLog } from 'types/oms';
import { langMapping, langMappingFunc } from './constants';
import { thousands } from 'utils/tools';

export const getLangUtils = (text: string, lang: string) =>
  langMapping[`${text}_${lang.toUpperCase()}`];

export const LogoSVG = () => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="28"
    height="32"
    viewBox="0 0 43 32"
    fill="none"
  >
    <g clipPath="url(#clip0_1091_2609)">
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M2.55213 30.1194C2.9433 30.1194 2.97772 30.2217 2.97772 30.3619V31.6056C2.77827 31.8053 2.06546 31.8775 1.51838 31.6056C0.553449 31.1264 0.440382 30.1937 0.453725 29.7852C0.496564 28.5197 1.25713 28.2422 2.03526 28.238C2.49104 28.2359 3.33237 28.3025 3.3429 29.0571C3.37942 29.0571 3.40259 29.0585 3.4342 29.027V28.177C3.22492 28.1658 3.04233 28.1091 2.82602 28.0859C2.55073 28.0565 2.25015 28.0201 1.94396 28.025C1.33368 28.0523 0.669325 28.2821 0.271133 28.9359C0.0534264 29.294 -0.0554268 29.8882 0.0281444 30.392C0.212844 31.5061 1.15881 31.9973 2.24805 32.0001C2.77335 32.0015 3.13011 31.8817 3.4033 31.7577C3.42366 31.242 3.41313 30.8776 3.43349 30.3619C3.43349 30.221 3.46229 30.1194 3.79868 30.1194V30.0283H2.55213V30.1194ZM23.322 31.6063C22.9238 30.9848 22.2714 29.8728 22.2574 29.816C22.4596 29.4825 23.1071 28.498 23.3522 28.238C23.4189 28.1672 23.4955 28.177 23.6563 28.177V28.1161H22.6226C22.6226 28.1462 22.631 28.1679 22.6528 28.177C22.848 28.177 23.0137 28.2268 22.8655 28.4503C22.4547 29.1756 22.171 29.5729 22.1359 29.664C21.8929 29.2092 21.7707 29.0873 21.5277 28.6325C21.5277 28.6227 21.3753 28.3697 21.3753 28.3592C21.3753 28.1742 21.4062 28.177 21.6183 28.177V28.1161H20.402C20.3626 28.1245 20.3732 28.1665 20.402 28.177C20.5101 28.177 20.6864 28.2184 20.7671 28.2681C21.0108 28.4181 21.5881 29.6023 21.862 29.9674C21.4954 30.5055 21.1611 31.0913 20.8584 31.5454C20.744 31.7164 20.659 31.8488 20.2805 31.8488V31.9399C20.4518 31.9399 20.6253 31.9098 20.7973 31.9098C20.9694 31.9098 21.1457 31.9399 21.3142 31.9399C21.3332 31.9259 21.3465 31.9182 21.3444 31.8789C21.2812 31.8285 21.2847 31.8607 21.1618 31.8488C21.152 31.8285 21.067 31.7591 21.192 31.4844C21.4273 31.1747 21.7784 30.5181 21.9526 30.2098C21.9687 30.2098 21.9828 30.2049 21.9828 30.2098C22.2188 30.6029 22.5474 31.1439 22.7736 31.5755C22.8564 31.7339 22.9175 31.7864 22.8037 31.8488V31.9098C23.138 31.9196 23.473 31.9301 23.8073 31.9399C23.8171 31.9301 23.8277 31.9196 23.8375 31.9098C23.834 31.9062 23.8073 31.8593 23.8073 31.8488C23.6275 31.8173 23.4751 31.8474 23.3206 31.6063H23.322ZM17.8176 31.8488C17.4812 31.8488 17.2417 31.1411 17.0879 30.7865C16.7515 30.0122 16.3203 28.8329 16.2058 28.6017H16.1145C15.7093 29.6331 15.3645 30.5434 14.9593 31.5755C14.8413 31.8117 14.7142 31.8572 14.4726 31.8488C14.4705 31.8635 14.4614 31.8705 14.4424 31.8789C14.4551 31.9048 14.4649 31.9315 14.4726 31.9399C14.5843 31.9399 14.7872 31.9091 14.9895 31.9098C15.1637 31.9098 15.3378 31.9413 15.446 31.9399C15.4558 31.9301 15.4663 31.9196 15.4762 31.9098C15.4762 31.8999 15.446 31.8593 15.446 31.8488C15.2999 31.8488 15.2332 31.8789 15.2332 31.6365C15.3736 31.1845 15.526 30.8173 15.5675 30.7262H16.6623C16.8828 31.3779 17.0795 31.6771 17.0577 31.8187C17.0549 31.8383 17.0008 31.8614 16.9966 31.8796C16.9924 31.8985 17.0226 31.9091 17.0577 31.9098C17.3147 31.9462 17.6322 31.9266 17.9398 31.9399C17.9426 31.9266 17.9398 31.8915 17.9398 31.8789C17.9398 31.8663 17.8639 31.8537 17.8183 31.8488H17.8176ZM16.571 30.5441H15.6286C15.7704 30.1292 15.9425 29.6843 16.085 29.2695C16.2536 29.6513 16.4432 30.2014 16.5717 30.5132V30.5434L16.571 30.5441ZM31.5633 28.6325C30.6096 28.6325 29.7999 29.2898 29.7999 30.3317C29.7999 31.3148 30.5632 32.0008 31.5633 32.0008C32.5633 32.0008 33.3267 31.2195 33.3267 30.2413C33.3267 28.7586 31.9994 28.6332 31.5633 28.6332V28.6325ZM31.6546 31.8187C30.6475 31.8187 30.2556 30.8958 30.2556 30.1804C30.2556 29.465 30.585 28.7846 31.5633 28.7846C32.4011 28.7846 32.8709 29.4937 32.8709 30.2715C32.8709 30.947 32.6616 31.8187 31.6546 31.8187ZM9.42463 28.7537C9.71889 28.7537 9.82002 28.7586 9.82002 29.027C9.83336 29.6107 9.85864 30.9154 9.88112 31.3331C8.92251 30.331 7.33395 28.6311 7.23563 28.6024C7.22018 28.6024 7.17453 28.615 7.17453 28.6633C7.17594 29.4783 7.17453 30.8958 7.17453 31.4851C7.17453 31.8796 7.0088 31.8502 6.84025 31.8495C6.79811 31.8691 6.80233 31.9406 6.84025 31.9406C6.96947 31.9406 7.14644 31.9105 7.32693 31.9105C7.51935 31.9105 7.71669 31.9406 7.874 31.9406C7.9042 31.9427 7.91193 31.8684 7.874 31.8495C7.53761 31.8495 7.44842 31.7311 7.44842 31.4851C7.44842 30.9729 7.41822 30.2021 7.41822 29.3311C8.42529 30.3864 9.03557 31.0346 9.94222 31.9105C10.0455 31.9847 10.0546 31.9714 10.0946 31.9714C10.0946 31.0619 10.0946 29.8595 10.0946 29.0004C10.0946 28.7895 10.1936 28.7551 10.3987 28.7551C10.4085 28.7348 10.4191 28.7145 10.4289 28.6942H9.39514C9.40146 28.7089 9.41621 28.7348 9.42534 28.7551L9.42463 28.7537ZM38.2834 31.8488C38.1057 31.8488 38.0074 31.6715 37.9793 31.4543C37.8768 30.6702 37.6633 28.7993 37.645 28.6325C37.6155 28.5947 37.5748 28.5603 37.4926 28.7236C37.2349 29.2393 36.6225 30.5272 36.2461 31.3029H36.185C35.7088 30.4032 35.3233 29.5329 34.8471 28.6325H34.7256C34.6491 29.3185 34.5789 30.0529 34.3913 31.5153C34.3913 31.7696 34.3113 31.8488 34.0571 31.8488V31.9098C34.3612 31.9196 34.6954 31.9301 34.9995 31.9399V31.8789C34.9082 31.8586 34.9693 31.8691 34.878 31.8488C34.7418 31.8488 34.6954 31.7577 34.6954 31.7276C34.6954 31.1334 34.8429 30.1229 34.8478 29.5427H34.9089C35.0164 29.87 35.6288 31.0605 35.9427 31.6967C35.9785 31.7696 36.0494 31.8803 36.0951 31.9091C36.1232 31.9273 36.1786 31.9315 36.2166 31.8481C36.6014 31.0696 36.9568 30.2904 37.3416 29.5119H37.3718C37.3999 29.947 37.5404 31.1025 37.5846 31.6659C37.5937 31.7857 37.5523 31.8313 37.5235 31.8481C37.5312 31.8852 37.5544 31.9034 37.6148 31.9091C37.869 31.9329 38.3655 31.9392 38.4969 31.9392C38.4969 31.9189 38.5271 31.8929 38.5271 31.8782C38.4969 31.8481 38.3276 31.8488 38.2841 31.8481L38.2834 31.8488ZM25.268 31.5755C25.2076 31.1446 25.247 29.3416 25.268 28.9359C25.268 28.7397 25.4233 28.7537 25.5419 28.7537C25.5609 28.7495 25.5827 28.753 25.5721 28.6928H24.5075C24.504 28.7348 24.5292 28.7264 24.5693 28.7537C24.8502 28.7537 24.8404 28.9296 24.8404 29.0494C24.8404 29.5925 24.8551 30.7136 24.8116 31.5755C24.8116 31.8285 24.7111 31.8488 24.5377 31.8488C24.5201 31.8663 24.5075 31.9182 24.5075 31.9399C24.5903 31.9399 24.8137 31.9098 25.0546 31.9098C25.2954 31.9098 25.5433 31.9399 25.6929 31.9399C25.7007 31.9091 25.6929 31.8754 25.6627 31.8488C25.3277 31.8488 25.2673 31.7682 25.2673 31.5755H25.268ZM13.9859 31.242C13.9298 31.6596 13.6348 31.7269 13.3195 31.7269C12.9775 31.7269 12.4718 31.7276 12.009 31.7276C12.7977 30.5924 13.3946 29.7004 13.9859 28.7846C14.0021 28.7593 14.0119 28.7355 14.0161 28.6935C13.3525 28.6935 12.8251 28.7082 12.1614 28.6935C12.0722 28.6914 11.9247 28.7005 11.7962 28.6633H11.6747C11.6235 28.875 11.5806 29.0705 11.5532 29.3612H11.6143C11.7218 28.9674 11.9599 28.8757 12.1923 28.8757H13.4698C12.8103 29.9211 12.1523 30.8377 11.4928 31.8187V31.9098C12.4374 31.8999 13.1046 31.9399 13.9255 31.9399C14.0077 31.874 14.0435 31.5412 14.0779 31.3632V31.242C14.0309 31.1971 14.0049 31.2111 13.9866 31.242H13.9859ZM29.3427 31.8488C29.0063 31.8488 28.7668 31.1411 28.613 30.7865C28.2766 30.0122 27.8454 28.8329 27.7309 28.6017H27.6396C27.2344 29.6331 26.8896 30.5434 26.4844 31.5755C26.3664 31.8117 26.2393 31.8572 25.9977 31.8488C25.9956 31.8635 25.9865 31.8705 25.9675 31.8789C25.9802 31.9048 25.99 31.9315 25.9977 31.9399C26.1094 31.9399 26.3123 31.9091 26.5146 31.9098C26.6888 31.9098 26.8629 31.9413 26.9711 31.9399C26.9809 31.9301 26.9914 31.9196 27.0013 31.9098C27.0013 31.8999 26.9711 31.8593 26.9711 31.8488C26.825 31.8488 26.7583 31.8789 26.7583 31.6365C26.8987 31.1845 27.0511 30.8173 27.0926 30.7262H28.1874C28.4079 31.3779 28.6046 31.6771 28.5828 31.8187C28.58 31.8383 28.5259 31.8614 28.5217 31.8796C28.5175 31.8985 28.5477 31.9091 28.5828 31.9098C28.8398 31.9462 29.1573 31.9266 29.4649 31.9399C29.4677 31.9266 29.4649 31.8915 29.4649 31.8789C29.4649 31.8663 29.389 31.8537 29.3434 31.8488H29.3427ZM28.0961 30.5441H27.1537C27.2955 30.1292 27.4676 29.6843 27.6101 29.2695C27.7787 29.6513 27.9683 30.2014 28.0968 30.5132V30.5434L28.0961 30.5441ZM5.5628 31.5755C5.50241 31.1446 5.54174 29.3416 5.5628 28.9359C5.5628 28.7397 5.71801 28.7537 5.83669 28.7537C5.85565 28.7495 5.87742 28.753 5.86689 28.6928H4.80224C4.79872 28.7348 4.82401 28.7264 4.86404 28.7537C5.14495 28.7537 5.13512 28.9296 5.13512 29.0494C5.13512 29.5925 5.14986 30.7136 5.10632 31.5755C5.10632 31.8285 5.0059 31.8488 4.83243 31.8488C4.81488 31.8663 4.80224 31.9182 4.80224 31.9399C4.8851 31.9399 5.10843 31.9098 5.34931 31.9098C5.59019 31.9098 5.8381 31.9399 5.98768 31.9399C5.99541 31.9091 5.98768 31.8754 5.95748 31.8488C5.6225 31.8488 5.5621 31.7682 5.5621 31.5755H5.5628Z"
        fill="black"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M42.1353 31.8793C42.1353 31.8674 42.0595 31.8541 42.0138 31.8492C41.6774 31.8492 41.438 31.1414 41.2842 30.7869C40.9478 30.0126 40.5166 28.8333 40.4021 28.6021H40.3108C39.9056 29.6335 39.5608 30.5437 39.1555 31.5759C39.0376 31.812 38.9105 31.8576 38.6689 31.8492C38.6668 31.8639 38.6576 31.8709 38.6387 31.8793C38.6513 31.9052 38.6611 31.9319 38.6689 31.9403C38.7805 31.9403 38.9835 31.9094 39.1857 31.9101C39.3599 31.9101 39.5341 31.9417 39.6422 31.9403C39.6521 31.9305 39.6626 31.9199 39.6724 31.9101C39.6724 31.9003 39.6422 31.8597 39.6422 31.8492C39.4955 31.8492 39.4294 31.8793 39.4294 31.6369C39.5699 31.1849 39.7223 30.8177 39.7637 30.7266H40.8586C41.0791 31.3783 41.2757 31.6775 41.254 31.819C41.2511 31.8387 41.1971 31.8618 41.1929 31.88C41.1886 31.8989 41.2188 31.9094 41.254 31.9101C41.511 31.9466 41.8284 31.9269 42.136 31.9403C42.1388 31.9269 42.136 31.8919 42.136 31.8793H42.1353ZM40.7666 30.5444H39.8241C39.966 30.1296 40.138 29.6847 40.2806 29.2698C40.4491 29.6517 40.6388 30.2018 40.7673 30.5136V30.5437L40.7666 30.5444Z"
        fill="black"
      />
    </g>
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M10.6006 0V21.2671H31.8803V0H10.6006ZM31.5052 20.8918H10.9757V0.350301H31.5052V20.8918ZM13.4014 18.4397C13.6287 18.4891 14.2568 18.4176 15.0018 18.4147C15.8032 18.4112 16.3283 18.5049 16.6773 18.4397C16.7191 18.4141 16.7401 18.4007 16.7523 18.3646V18.2645C16.6895 18.1627 16.4161 18.1999 16.2271 18.1645C16.0445 18.1301 15.9561 18.1342 15.752 18.0143C15.5479 17.8945 15.6148 17.2899 15.627 16.8383C15.984 16.8383 16.3202 16.8133 16.6773 16.8133C17.2454 16.8133 18.3295 16.9012 18.4027 16.8383C18.4516 16.7824 18.4516 16.7109 18.4277 16.6632C18.3899 16.5532 18.1666 16.6003 18.0026 16.5631C17.8596 16.5305 17.763 16.4531 17.7025 16.4129C17.6281 16.3047 17.5984 15.9853 17.8776 15.4621C18.3731 14.534 18.4673 14.4461 18.5278 14.3362C19.0291 15.3225 19.5088 16.2832 20.0282 17.1886C20.2358 17.5453 20.5498 18.2634 20.7534 18.3896C20.8237 18.4478 20.9331 18.3978 20.9784 18.3646C21.1436 18.1994 21.3692 17.6512 21.5286 17.3387C22.0119 16.3466 22.4957 15.3539 22.979 14.3612H23.029C23.3622 14.9617 23.671 15.5122 24.0043 16.1127C24.0054 16.2436 24.013 16.3507 23.9793 16.4129C23.9194 16.5229 23.7658 16.4962 23.7292 16.6381C23.7292 16.6463 23.7275 16.7132 23.7792 16.7632C23.7903 16.7743 23.8775 16.8022 24.0043 16.8133C24.4678 16.8529 25.5227 16.8319 26.0798 16.8633C26.0973 17.3591 26.1665 17.7577 26.1299 17.9893C26.1171 18.0684 25.9571 18.0626 25.9548 18.1645C25.9525 18.2616 26.0037 18.3059 26.0298 18.3146C26.12 18.3448 26.3392 18.3629 26.755 18.3896C27.2185 18.4193 27.8263 18.4327 28.3805 18.4397C28.8091 18.4449 29.3447 18.474 29.4308 18.4147C29.4843 18.378 29.5139 18.3018 29.5058 18.2645C29.4785 18.1359 29.2249 18.1988 28.8556 18.1645C28.2322 18.1068 27.992 17.9177 27.8303 17.664C27.4064 16.9989 27.4529 15.8444 27.3302 14.8616C27.0883 12.8355 26.8469 10.8081 26.605 8.78197C26.4829 8.08311 26.4863 7.10378 26.3549 6.6051C26.3351 6.53003 26.2991 6.45089 26.2549 6.40492C26.2142 6.37641 26.1805 6.37234 26.0798 6.3799C25.9176 6.50268 25.86 6.68947 25.7548 6.90535C25.6105 7.20154 25.4587 7.5466 25.3296 7.80613C24.6713 9.14041 24.0124 10.5503 23.3541 11.8846V11.9097C22.8208 11.0176 22.2869 10.125 21.7537 9.23236C22.1456 8.65686 22.512 8.05634 22.904 7.48085C23.496 6.5888 24.0874 5.69618 24.6795 4.80355C24.9935 4.33105 25.4099 3.70086 25.7798 3.45239C26.1595 3.19693 26.4404 3.17075 26.8551 3.17715C26.9091 3.15271 26.9533 3.12885 26.9551 3.05204C26.9661 2.98396 26.9045 2.93043 26.83 2.92693C26.6649 2.91937 26.2531 2.92112 26.0048 2.92693C25.7518 2.93275 25.2407 2.95312 24.9295 2.95196C24.2753 2.94963 23.3454 2.899 23.2041 2.95196C23.1412 2.96941 23.1162 3.07066 23.179 3.15213C23.1977 3.19868 23.5797 3.15329 23.7542 3.20217C23.9141 3.24698 24.0525 3.27956 24.1543 3.45239C24.3003 3.84051 23.8542 4.49049 23.5792 4.95368C23.079 5.75436 22.5789 6.55505 22.0787 7.35574C21.8287 7.73921 21.5786 8.12326 21.3285 8.50673C21.3285 8.52361 21.3035 8.56492 21.3035 8.58179C21.1203 8.27339 20.9366 7.9644 20.7534 7.656C20.2172 6.76163 19.699 5.82361 19.203 4.87861C18.9697 4.43463 18.5365 3.88473 18.6278 3.40234C18.7976 3.14922 19.0262 3.16144 19.428 3.17715C19.4734 3.14631 19.4978 3.12711 19.503 3.02702C19.5007 2.96418 19.4443 2.9345 19.403 2.92693C19.0122 2.90191 18.1416 2.94672 17.4525 2.95196C16.5458 2.95894 15.9602 2.92693 15.1268 2.92693C15.057 2.92926 14.989 2.93799 14.9768 3.002C14.9686 3.09161 14.9989 3.12362 15.0268 3.15213C15.0565 3.17889 15.3786 3.18704 15.702 3.25221C15.9323 3.29877 16.1585 3.38605 16.3022 3.47741C17.0087 3.92547 17.3629 4.80995 17.8026 5.52917C18.6359 6.92165 19.4699 8.33973 20.3033 9.73278C19.8531 10.4415 19.403 11.1509 18.9529 11.8596C18.9447 11.8765 18.936 11.8928 18.9279 11.9097C18.2445 10.5585 17.5606 9.20733 16.8773 7.85617C16.7598 7.62458 16.6127 7.31443 16.4772 7.03046C16.3446 6.75232 16.2469 6.47242 16.0021 6.3799H15.877C15.7276 6.4474 15.7101 6.96994 15.677 7.38076C15.6345 7.90156 15.5787 8.5207 15.5019 8.95712C15.2437 11.1253 14.9849 13.294 14.7267 15.4621C14.5941 16.2168 14.6174 17.4941 14.3516 17.9142C14.2173 18.1266 13.9544 18.1592 13.7014 18.1895C13.5851 18.2034 13.4863 18.161 13.3763 18.2145C13.3112 18.2645 13.3007 18.2686 13.3013 18.3646C13.3071 18.4036 13.3543 18.4333 13.4014 18.4397ZM25.3541 9.50759C25.571 11.6589 25.7873 13.9114 26.0042 16.0626C25.5751 15.7438 24.0531 13.106 23.8036 12.6847C24.1956 11.8806 24.933 10.3769 25.3541 9.50701V9.50759ZM20.7778 10.5085C20.9703 10.8611 22.3085 13.1404 22.5283 13.486C22.544 13.5105 22.5242 13.5436 22.5283 13.5611C22.0863 14.4781 21.6449 15.4208 21.2029 16.3385C21.1831 16.3385 21.1657 16.3385 21.1529 16.3385C20.5696 15.1712 19.9857 14.0033 19.4024 12.8355C19.8525 12.0685 20.3277 11.276 20.7778 10.5085ZM15.8264 14.5119C15.9439 13.0973 16.1347 11.191 16.2516 9.78283C16.2812 9.78283 16.3184 9.79156 16.3516 9.84044C16.4981 10.0592 16.6267 10.4863 16.7267 10.6836C17.1599 11.5675 17.5938 12.452 18.027 13.3359C17.5339 14.2529 16.5784 15.9754 15.6764 16.4385C15.6595 16.641 15.7235 15.7525 15.8264 14.5119Z"
      fill="#B58E4B"
    />
    <defs>
      <clipPath id="clip0_1091_2609">
        <rect
          width="42.1367"
          height="3.97516"
          fill="white"
          transform="translate(0 28.0251)"
        />
      </clipPath>
    </defs>
  </svg>
);

/** 格式化 */
export const getTimeFormat = (
  date?: string,
  format = 'YYYY-MM-DD HH:mm'
): string => {
  if (!date) return '-';
  return dayjs(date).format(format);
};

/** 合同变更记录内容 */
/** 合同状态 1-自动续约 2-寄卖转回收 3-终止合同 4-商品退回 5-交易完成 6-修改价格 7-生成合同 */
export const getContractContent = (
  data: OmsRecycleOrderContractLog,
  obj: any
) => {
  const {
    type,
    new_end_time,
    create_time,
    prev_price = 0,
    new_price = 0,
    return_express_company,
    return_tracking_number,
  } = data;
  const { currency, final_sale_price, lang } = obj;

  const enFormat = 'MMMM DD,YYYY';
  const cnFormat = 'YYYY年MM月DD日';
  const newEndTime = getTimeFormat(new_end_time, cnFormat);
  const newEndTime_EN = getTimeFormat(new_end_time, enFormat);
  const createTime = getTimeFormat(create_time, cnFormat);
  const createTime_EN = getTimeFormat(create_time, enFormat);
  const settlement = [
    '',
    getLangUtils('cash', lang),
    getLangUtils('bankTransfer', lang),
  ][obj.settlement_type];
  const newPrice = thousands(new_price) || 0;
  const oldPrice = thousands(prev_price) || 0;
  const finalSalePrice = thousands(final_sale_price) || 0;
  if (type === 1) {
    return langMappingFunc('automaticRenewalTips', lang, {
      newEndTime,
      newEndTime_EN,
    });
    // return `本次寄賣已期滿3個月，自動續期至${newEndTime}`;
  } else if (type === 2) {
    return langMappingFunc('consignmentToSellNowTips', lang, {
      currency,
      newPrice,
      settlement,
    });
    // return `本次寄賣轉為即時回收，結算金額：${currency} ${newPrice}（${settlement}），回收交易完成`;
  } else if (type === 3 || type === 4) {
    return langMappingFunc('consignmentCancelledTips', lang, {
      return_express_company,
      return_tracking_number,
    });
    // return `寄賣商品已退回（${return_express_company} / ${return_tracking_number}），本次寄賣交易終止`;
  } else if (type === 5) {
    return langMappingFunc('consignmentCompletedTips', lang, {
      currency,
      finalSalePrice,
      settlement,
    });
    // return `寄賣商品已賣出結算，結算金額：${currency} ${finalSalePrice}（${settlement}），寄賣交易完成`;
  } else if (type === 6) {
    const diff = Number(new_price) < Number(prev_price) ? '下' : '上';
    const diff_EN =
      Number(new_price) < Number(prev_price) ? 'reduced' : 'increased';
    return langMappingFunc('priceAdjustmentTips', lang, {
      diff,
      diff_EN,
      currency,
      newPrice,
      oldPrice,
    });
    // return `本次寄賣的契約價格由即日起${diff}調至 ${currency} ${newPrice}（原報價：${currency} ${oldPrice}）`;
  } else if (type === 7) {
    return langMappingFunc('contractSignedTips', lang, {
      createTime,
      createTime_EN,
    });
    // return `您于${createTime}与我司签订了寄卖合同`;
  }
};

const list: any = {
  1: {
    address: 'addressJP',
    tel: '+81 03 6264 5267',
    email: 'consign@ginzaxiaoma.com',
  },
  2: {
    address: 'addressHk',
    tel: '+852 2662 9721',
    email: 'hongkong@ginzaxiaoma.com',
  },
  3: {
    address: 'addressSG',
    tel: '+65 6530 3529',
    email: 'singapore@ginzaxiaoma.com',
  },
};
/** 尾页显示 不同地区不同内容 */
export const getFooterData = (key: number) => list[key];
